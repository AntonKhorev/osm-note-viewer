/*** css/common.css ***/
:root {
	--frame-color: #AAA;
	--hover-color: #DEF;
	--click-color: #FC8;
	--info-color: #28F;
	--info-stroke-color: #00F;
	--notice-background-color: #FFB;
	--error-color: #F00;
	--error-background-color: #FCC;
	--refresh-color: #C80;
	--semi-link-color: #004;
	--inset-background-color: #EEE;
	--file-reader-background-color: #e9e9ed;
	--file-reader-passive-border-color: #888;
	--file-reader-active-border-color: #6A6;
	--tag-key-background-color: #F8F8FF;
	--popup-item-background: #F8F8F8;
	--popup-main-item-background: #FFF;

	--frame-line: solid 1px var(--frame-color);
}
@media (prefers-color-scheme: dark) {
	:root {
		--frame-color: #666;
		--hover-color: #246;
		--click-color: #A84;
		--info-color: #26B;
		--info-stroke-color: #008;
		--notice-background-color: #662;
		--error-color: #C00;
		--error-background-color: #622;
		--semi-link-color: #CCF;
		--inset-background-color: #333;
		--file-reader-background-color: #2b2a33;
		--tag-key-background-color: #223;
		--popup-item-background: #333;
		--popup-main-item-background: #222;
	}
}

body {
	padding: 0;
	margin: 0;
}
body > .symbols {
	display: none;
}

.ui {
	position: fixed;
	height: 100%;
	width: 100%;
	display: grid;
	grid-template-columns: var(--min-hor-side-size,0) var(--left-side-size,1fr) var(--right-side-size,1fr) var(--min-hor-side-size,0);
	grid-template-rows: var(--min-ver-side-size,0) var(--top-side-size,1fr) var(--bottom-side-size,1fr) var(--min-ver-side-size,0);
}
.ui .graphic-side {
	grid-row: 1 / -1;
	grid-column: 1 / -1;
	position: relative;
}
.ui .text-side[data-side='top'] {
	grid-column: 1 / -1;
	grid-row: 1 / 3;
}
.ui .text-side[data-side='top'] + .graphic-side {
	grid-column: 1 / -1;
	grid-row: -3 / -1;
}
.ui .text-side[data-side='bottom'] {
	grid-column: 1 / -1;
	grid-row: -3 / -1;
}
.ui .text-side[data-side='bottom'] + .graphic-side {
	grid-column: 1 / -1;
	grid-row: 3 / 1;
}
.ui .text-side[data-side='left'] {
	grid-row: 1 / -1;
	grid-column: 1 / 3;
}
.ui .text-side[data-side='left'] + .graphic-side {
	grid-row: 1 / -1;
	grid-column: -3 / -1;
}
.ui .text-side[data-side='right'] {
	grid-row: 1 / -1;
	grid-column: -3 / -1;
}
.ui .text-side[data-side='right'] + .graphic-side {
	grid-row: 1 / -1;
	grid-column: 1 / 3;
}
.ui .flip-margin[data-side='left'] {
	grid-row: 1 / -1;
	grid-column: 1 / 2;
}
.ui .flip-margin[data-side='right'] {
	grid-row: 1 / -1;
	grid-column: -2 / -1;
}
.ui .flip-margin[data-side='top'] {
	grid-column: 1 / -1;
	grid-row: 1 / 2;
}
.ui .flip-margin[data-side='bottom'] {
	grid-column: 1 / -1;
	grid-row: -2 / -1;
}

.ui .text-side {
	position: relative;
	display: flex;
	flex-direction: column;
	z-index: 1; /* be above photo with blurry backdrop */
}
.ui .text-side > .scrolling {
	overflow-y: scroll;
	flex-basis: 2.5rem;
	flex-grow: 1;
	flex-shrink: 0;
}
.ui .text-side > .sticky {
	flex-shrink: 1;
	overflow-y: auto;
}

.ui .flip-margin {
	background: #8888;
	z-index: 10;
	position: relative;
}
.ui .flip-margin.active {
	background: #7898;
}
.ui .flip-margin .side-indicator {
	position: absolute;
	inset: 0;
	margin: auto;
	max-width: calc(100% - 1rem);
	max-height: calc(100% - 1rem);
	aspect-ratio: 1;
	background: canvas;
	box-sizing: border-box;
	border: solid 1px;
	border-radius: 4px;
}
.ui .flip-margin.active .side-indicator {
	background: var(--hover-color);
}
.ui .flip-margin .side-indicator::before {
	content: '';
	position: absolute;
	background: var(--frame-color);
}
.ui .flip-margin[data-side='left'] .side-indicator::before {
	width: 25%;
	height: 100%;
	border-right: solid 1px;
	border-top-left-radius: 3px;
	border-bottom-left-radius: 3px;
}
.ui .flip-margin[data-side='right'] .side-indicator::before {
	width: 25%;
	height: 100%;
	border-left: solid 1px;
	border-top-right-radius: 3px;
	border-bottom-right-radius: 3px;
	right: 0;
}
.ui .flip-margin[data-side='top'] .side-indicator::before {
	height: 25%;
	width: 100%;
	border-bottom: solid 1px;
	border-top-left-radius: 3px;
	border-top-right-radius: 3px;
}
.ui .flip-margin[data-side='bottom'] .side-indicator::before {
	height: 25%;
	width: 100%;
	border-top: solid 1px;
	border-bottom-left-radius: 3px;
	border-bottom-right-radius: 3px;
	bottom: 0;
}

a.input-link[tabindex],
a.listened,
time.listened {
	text-decoration: underline dotted 1px;
	cursor: pointer;
}
a.input-link[tabindex],
time.listened {
	color: var(--semi-link-color);
}
a.input-link[tabindex].loading,
a.listened.loading {
	cursor: progress;
}
a.listened.error,
a.listened.absent {
	text-decoration-color: #A00;
}
a.other-note.absent:active {
	cursor: not-allowed;
}
button[role=progressbar] {
	cursor: progress;
}

kbd.copy {
	text-decoration: underline dotted 1px;
}
kbd.copy::after {
	content: ' (copy)';
	opacity: 0;
}
kbd.copy:hover::after {
	opacity: 0.5;
}

button.global {
	position: absolute;
	width: 2rem;
	height: 2rem;
	box-sizing: border-box;
	border: none;
	padding: 0;
	background: none;
	overflow: hidden;
}
button.global > svg {
	width: 100%;
	height: 100%;
}
button.global:not([disabled]):hover {
	cursor: pointer;
}
button.global:not([disabled]):hover > svg { /* > svg background only required for leaflet border style, otherwise could set background on button directly */
	background: var(--hover-color);
}

.loose-parser-popup {
	--item-width: 90px;
	display: none;
	position: fixed;
	z-index: 1;
	list-style: none;
	margin: 0;
	padding: 0;
	border: var(--frame-line);
	font-size: .9em;
	opacity: .9;
}
.loose-parser-popup.open {
	display: block;
}
.loose-parser-popup a {
	display: block;
	box-sizing: border-box;
	width: var(--item-width);
	padding: 2px 0 2px 5px;
	background: var(--popup-item-background);
	overflow: hidden;
	text-overflow: ellipsis;
}
.loose-parser-popup li.main a {
	padding: 10px 0 10px 5px;
	border-top: var(--frame-line);
	border-bottom: var(--frame-line);
	background: var(--popup-main-item-background);
}
.loose-parser-popup a:link:hover {
	background: var(--hover-color);
}

/*** css/navbar.css ***/
nav {
	position: relative;
	box-sizing: border-box;
	padding: .5rem 3rem 0 .5rem;
	z-index: 1;
}
nav button.global {
	right: .25rem;
	top: .25rem;
	z-index: 2;
}
nav button.global:not(.reset):not(:focus) {
	opacity: 0;
	pointer-events: none;
}
nav button.reset {
	border-radius: 50%;
}
nav button.global:not(.reset):focus ~ button.reset {
	opacity: 0;
	pointer-events: none;
}
nav [role=tablist] {
	display: flex;
	margin: 0;
	padding: 0;
}
nav [role=tablist] [role=tab] {
	line-height: 2rem;
	position: relative;
	display: block;
	padding: 0 1rem;
	border-left: var(--frame-line);
	border-right: var(--frame-line);
	border-top: var(--frame-line);
	border-top-left-radius: 8px;
	border-top-right-radius: 8px;
	border-bottom: none;
	margin-bottom: -1px;
	margin-left: -1px;
	color: var(--semi-link-color);
	background: var(--inset-background-color);
	text-decoration: none;
}
nav [role=tablist] [role=tab]:first-child {
	margin-left: 0;
}
nav [role=tablist] [role=tab][aria-selected=true] {
	background: canvas;
}
nav [role=tablist] [role=tab]:hover {
	background: var(--hover-color);
}
nav [role=tablist] [role=tab]:focus {
	z-index: 1;
}

/*** css/panel.css ***/
:root {
	--major-button-padding: .3rem;
}

.panel {
	--panel-padding: .5rem;
	position: relative;
	padding: var(--panel-padding);
	border-top: var(--frame-line);
	border-bottom: var(--frame-line);
}
.panel + .panel {
	border-top: none;
}
.panel label.inline {
	white-space: nowrap;
}
.panel h2 {
	margin: 1.5rem 0 .5rem 0;
}
.panel section:first-child h2,
.panel section[role=tabpanel] h2 {
	margin-top: .3rem;
}
.panel [class$="-input-group"] {
	margin: .5rem 0;
}
.panel div.notice:not(:empty) {
	margin: .5rem calc(-1 * var(--panel-padding)); /* negative margins only for block-level notices */
}
.panel .notice:not(:empty) {
	padding: .5rem var(--panel-padding);
}
.panel .notice {
	background: var(--notice-background-color);
}
.panel .notice.error {
	color: var(--error-color);
	background: var(--error-background-color);
}
.panel:not(.toolbar) details > summary:hover {
	background: var(--hover-color);
}
.panel:not(.toolbar) > details:first-child > summary {
	margin-top: calc(-1 * var(--panel-padding));
}
.panel:not(.toolbar) > details:last-child > summary {
	margin-bottom: calc(-1 * var(--panel-padding));
}
.panel:not(.toolbar) > details > summary {
	margin-left: calc(-1 * var(--panel-padding));
	margin-right: calc(-1 * var(--panel-padding));
	padding: .5rem var(--panel-padding);
}
.panel:not(.toolbar) > section > details > summary,
.panel:not(.toolbar) > section > details > details > summary {
	margin-left: calc(-1 * var(--panel-padding));
	margin-right: calc(-1 * var(--panel-padding));
	padding: 0 var(--panel-padding);
}

:is(.panel.fetch, .more) .advanced-hint {
	opacity: .7;
	font-size: .9em;
}
:is(.panel.fetch, .more) a.request {
	word-wrap: anywhere;
}
:is(.panel.fetch, .more):not(.advanced-mode) .advanced-hint {
	display: none;
}
:is(.panel.fetch, .more) .advanced-hint p {
	margin: .5em 0;
}
.panel.fetch:not(.advanced-mode) .advanced-input-group {
	display: none;
}
.panel.fetch.advanced-mode .non-advanced-input-group {
	display: none;
}
.panel.fetch input[type=number] {
	width: 4em;
}
.panel.fetch .advanced-hint table {
	border-collapse: collapse;
}
.panel.fetch .advanced-hint td {
	border-top: var(--frame-line);
	padding: 4px 0 4px 8px;
}
.panel.fetch .advanced-hint td:first-child {
	padding-left: 0;
}
.panel.fetch .advanced-hint .linked-parameter {
	text-decoration: underline dotted 1px;
	color: var(--semi-link-color);
	cursor: pointer;
}

.panel.toolbar {
	--gap: 8px;  /* used in info tips */
	display: flex;
	flex-wrap: wrap;
	gap: var(--gap);
}
.panel.toolbar div,
.panel.toolbar details.tool {
	margin: 0;
	line-height: 1.4em;
}
.panel.toolbar details.tool.full-width[open] {
	width: 100%;
}
.panel.toolbar details.tool {
	outline: none;
}
@keyframes tool-ping-fade {
	from {
		outline-color: var(--click-color);
		outline-style: solid;
	}
	to {
		outline-color: transparent;
		outline-style: solid;
	}
}
.panel.toolbar details.tool > summary {
	display: inline;
}
.panel.toolbar details.tool > summary::before,
dialog.help :is(button.open-all-tools, button.close-all-tools)::before {
	--size: 11px;
	content: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-5.5 -5.5 11 11' fill='none' stroke='gray'><rect width='10' height='10' x='-5' y='-5' opacity='.3' /><line x1='-3' x2='3' /><line y1='-3' y2='3' /></svg>");
	display: inline-block;
	width: var(--size);
	height: var(--size);
	line-height: var(--size);
	margin-right: .5ch;
}
.panel.toolbar details.tool > summary:hover::before {
	background: var(--hover-color);
	outline: solid 1px var(--hover-color);
	outline-offset: 1px;
}
.panel.toolbar details.tool[open] > summary::before,
dialog.help button.close-all-tools::before {
	content: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-5.5 -5.5 11 11' fill='none' stroke='gray'><rect width='10' height='10' x='-5' y='-5' opacity='.3' /><line x1='-3' x2='3' /></svg>");
}
.panel.toolbar details.tool[open] > summary::after {
	content: ':';
	width: 1ex;
	display: inline-block;
}
.panel.toolbar details.tool button.info {
	--info-size: 20px;
	--info-height-with-tip: calc(var(--info-size) + var(--gap) + 1px);
	display: inline-block;
	position: relative;
	vertical-align: bottom;
	border: none;
	padding: 0;
	margin: 0;
	background: none;
	width: var(--info-size);
	height: var(--info-size);
	overflow: hidden;
}
.panel.toolbar details.tool button.info > svg {
	position: absolute;
	top: 0;
	left: 0;
	width: var(--info-size);
	height: var(--info-height-with-tip);
}
.panel.toolbar details.tool button.info[aria-expanded=false] {
	cursor: help;
}
.panel.toolbar details.tool button.info:hover {
	--tools-info-hover-part-visibility: visible;
}
.panel.toolbar details.tool button.info[aria-expanded=true] {
	margin-bottom: calc(-1px - var(--gap));
	height: var(--info-height-with-tip);
	--tools-info-tip-part-visibility: visible;
}
.panel.toolbar details.tool button.info[aria-expanded=true]:hover {
	--tools-info-close-hover-part-visibility: visible;
}
.panel.toolbar details.tool form {
	display: contents;
}
.panel.toolbar details.info {
	width: calc(100% + 1rem);
	display: none;
	margin: 0 -.5rem;
	border-top: solid 1px #AAA;
	border-bottom: solid 1px #AAA;
	padding: 0 .5rem;
	background: var(--inset-background-color);
}
.panel.toolbar details.info p {
	margin: .5rem 0;
}
.panel.toolbar details.info[open] {
	display: block;
}
.panel.toolbar details.info > summary {
	display: none;
}
.panel.toolbar details.tool :is(.major-input-group, .gridded-input-group) {
	margin: .2em 0;
}
.panel.toolbar > button.settings {
	margin-left: auto;
}
.panel.toolbar [class|=icon] > svg {
	vertical-align: middle;
}
.panel.toolbar [class|=icon-map] > svg {
	width: 19px;
	height: 13px;
}
.panel.toolbar [class|=icon-notes] > svg {
	width: 9px;
	height: 13px;
}
.panel.toolbar [class|=icon-action] > svg {
	width: 13px;
	height: 13px;
}
.panel.toolbar [class|=icon-note-status] > svg {
	width: 8px;
	height: 16px;
	vertical-align: text-bottom;
}
.panel.toolbar .icon-map-area {
	--tools-map-area-part-visibility: visible;
}
.panel.toolbar .icon-map-center {
	--tools-map-center-part-visibility: visible;
}
.panel.toolbar button[disabled] [class|=icon] {
	opacity: .5;
}
.panel.toolbar button.only-with-icon {
	box-sizing: content-box;
	height: 13px;
	width: 13px;
	padding: 2px;
	vertical-align: bottom;
}
.panel.toolbar button.only-with-icon [class|=icon] > svg {
	vertical-align: inherit;
}
.panel.toolbar input[type=number] {
	width: 7ch;
}
.panel.toolbar .interaction-run {
	display: flex;
	gap: .2em;
}
.panel.toolbar .interaction-run > output {
	flex-grow: 1;
}
.panel.toolbar .interaction-run > button {
	flex-shrink: 0;
}
.panel.toolbar .interaction-run > button.run {
	position: relative;
}
.panel.toolbar .interaction-run > button.run > .outline {
	position: absolute;
	inset: 0;
}
.panel.toolbar .interaction-run > button.info {
	align-self: end;
}

.panel :is(input,textarea):invalid:not(.no-invalid-indication) {
	border: solid 2px var(--error-color);
	border-radius: 3px;
}
.panel .major-input-group :is(input[type=text], textarea, button):not([hidden]) {
	display: block;
	box-sizing: border-box;
	width: 100%;
	margin: .2em 0;
}
.panel .major-input-group textarea {
	resize: vertical;
}
.panel .major-input-group button {
	padding: var(--major-button-padding);
}
.panel .major-input-group .text-controls {
	float: right;
}
.panel .major-input-group .text-controls a span {
	opacity: .7;
}
.panel .major-input-group .text-controls a em {
	font-style: inherit;
}
.panel .text-button-input-group {
	display: flex;
	gap: .5em;
	align-items: end;
}
.panel .text-button-input-group > label {
	flex-grow: 1;
}
.panel .text-button-input-group > label input[type=text] {
	display: block;
	box-sizing: border-box;
	width: 100%;
}
.panel .text-button-input-group button {
	width: 4.5rem;
}
.panel .checkbox-button-input-group {
	display: flex;
	gap: .5em;
}
.panel .checkbox-button-input-group > button {
	flex-grow: 1;
	padding: var(--major-button-padding);
}
.panel button.error {
	color: var(--error-color);
	box-shadow: 0px 0px 0px 1px var(--error-color);
}
.panel fieldset {
	margin-left: 0;
	margin-right: 0;
}
.panel .major-input-group label.file-reader {
	--file-reader-border-width: 2px;
}
.panel .major-input-group label.file-reader {
	display: grid;
	align-content: center;
}
.panel .major-input-group label.file-reader .over {
	margin: 2px;
	grid-row: 1;
	grid-column: 1;
	z-index: 1;
	pointer-events: none;
	background: var(--file-reader-background-color);
	display: grid;
	place-items: center;
}
.panel .major-input-group label.file-reader:focus-within .over {
	z-index: -1;
}
.panel .major-input-group label.file-reader input {
	display: block;
	padding: 3rem;
	background: var(--file-reader-background-color);
	text-align: center;
	grid-row: 1;
	grid-column: 1;
	border: dashed var(--file-reader-border-width) var(--file-reader-passive-border-color);
	border-radius: 2px;
}
.panel .major-input-group label.file-reader input.active {
	border: dashed var(--file-reader-border-width) var(--file-reader-active-border-color);
}
.panel .gridded-input-group {
	display: grid;
	grid-template-columns: repeat(auto-fit, minmax(16ch, 1fr));
	gap: .2em;
}
.panel .gridded-input-group > button {
	padding: var(--major-button-padding);
	white-space: nowrap;
}
.panel .date-range-input-group {
	display: flex;
	flex-wrap: wrap;
	gap: .5em;
}
.panel .date-range-input-group > label {
	flex-grow: 1;
}
.panel .date-range-input-group > label > input {
	display: block;
	box-sizing: border-box;
	width: 100%;
}

.more div {
	margin: 1em;
}
.more button {
	display: block;
	box-sizing: border-box;
	width: 100%;
	padding: var(--major-button-padding);
}
.more .error {
	background: var(--error-background-color);
}
.more pre {
	margin: 1rem 0 0 0;
	padding: 1rem;
	background: var(--inset-background-color);
	overflow-x: scroll;
}
.examples dd {
	margin: .5em 0 .5em 2em;
	padding: .5em;
	background: var(--inset-background-color);
}
.examples code {
	white-space: pre-wrap;
}

.panel table th {
	vertical-align: bottom;
}
.panel table td.number {
	text-align: right;
}
.panel table th.capability {
	min-width: 1em;
	writing-mode: vertical-rl;
	vertical-align: top;
	transform: rotate(180deg);
}
.panel table td.capability {
	text-align: center;
}
.panel table td.capability a {
	text-decoration: none;
}
.panel table input[type=radio] {
	cursor: pointer;
}

.panel details.with-code-form details.syntax {
	float: right;
}
.panel details.with-code-form details.syntax[open] > summary {
	margin-left: calc(-1 * var(--panel-padding));
	margin-right: calc(-1 * var(--panel-padding));
	padding: 0 var(--panel-padding);
}

/*** css/notes.css ***/
.notes {
	--cell-pad: 2px;
}
.notes table {
	border-collapse: collapse;
	min-width: 100%;
}
.notes caption {
	margin: .5em;
	text-align: left;
}
.notes thead th {
	position: sticky;
	top: 0;
	z-index: 1;
	background: canvas;
	text-align: left;
	white-space: nowrap;
}
.notes tbody,
.notes tbody * {
	scroll-margin-top: var(--table-header-height);
}
.notes tbody {
	position: relative;
}
.notes tbody.active-hover::before {
	content: '';
	display: block;
	position: absolute;
	inset: 0;
	background: var(--hover-color);
	z-index: -1;
}
@keyframes active-click-fade {
	from { background: var(--click-color); }
	to { background: transparent; }
}
.notes tbody.active-click {
	animation-name: active-click-fade;
	animation-duration: 3s;
}
.notes td {
	vertical-align: top;
}
.notes :is(td,th) {
	padding: var(--cell-pad);
}
.notes :is(td,th):focus-visible {
	outline-offset: calc(0px - var(--cell-pad));
}
.notes mark {
	background: #FF08;
}

.notes thead th button.expander {
	position: relative;
	box-sizing: border-box;
	width: 17px;
	height: 17px;
	vertical-align: text-top;
	cursor: pointer;
}
.notes thead th button.expander > svg {
	position: absolute;
	inset: 0;
	width: 100%;
	height: 100%;
}
.notes thead th button.expander > svg .arrow,
.notes thead th button.expander > svg .arrowend,
.notes thead th button.expander > svg .arrowhead {
	transition: transform 150ms;
}
.notes thead th button.expander > svg .arrow {
	transform-origin: 7.5px 7.5px;
}
.notes thead th button.expander > svg .arrowend {
	transform: translate(5px,0px);
}
.notes thead th button.expander.vertical > svg .arrow {
	transform: rotate(90deg);
}
.notes thead th button.expander.inward > svg .arrowhead {
	transform: scale(-1,1);
}
.notes thead th button.expander.tight > svg .arrowend {
	transform: translate(3px,0px);
}

.notes td.note-link > div {
	position: relative;
	display: grid;
	text-align: right;
}
.notes tbody[data-updated] td.note-link > div::after {
	content: '';
	position: absolute;
	top: 0;
	right: -2px;
	border: solid 3px var(--refresh-color);
	border-radius: 3px;
}
.notes td.note-link > div progress {
	grid-row: 1;
	grid-column: 1;
	position: absolute;
	z-index: -1;
	height: 2px;
	width: 100%;
	bottom: 0;
	left: 0;
	border: 0;
	opacity: .7;
	background: transparent;
}
.notes td.note-link > div progress::-webkit-progress-bar {
	background: transparent;
}
.notes td.note-link > div progress::-moz-progress-bar {
	background-color: var(--refresh-color);
}
.notes td.note-link > div progress::-webkit-progress-value {
	background-color: var(--refresh-color);
}
.notes table:not(.expanded-id) td.note-link a .constant {
	display: none;
}
.notes table:not(.expanded-id) td.note-link a .constant + .variable::before {
	content: '...';
}
.notes table.contracted-id td.note-link > div {
	text-align: center;
}
.notes table.contracted-id td.note-link a .variable {
	display: none;
}
.notes table.contracted-id td.note-link a::before {
	content: '#'
}
.notes table.contracted-id th.note-link .title {
	display: none;
}

.notes td.note-action [class|=icon] {
	position: relative;
	display: inline-block;
	width: 16px;
	height: 16px;
	vertical-align: text-top;
}
.notes td.note-action [class|=icon] > svg {
	position: absolute;
	inset: 0;
	width: 100%;
	height: 100%;
}
.notes td.note-action [class|=icon-comments-count] {
	border: 0;
	padding: 0;
	background: transparent;
}
.notes td.note-action [class|=icon-comments-count]:not(:empty):hover {
	--table-comments-icon-background: #DEF;
	cursor: pointer;
}
.notes td.note-action [class|=icon-comments-count] > svg text {
	font-family: sans-serif;
	font-size: 10px;
	text-anchor: middle;
	dominant-baseline: central;
}

.notes td.note-date {
	white-space: nowrap;
}
.notes table:not(.expanded-date) td.note-date time > .time-part,
.notes table.contracted-date td.note-date time > .year-part,
.notes table.contracted-date th.note-date .title {
	display: none;
}

.notes td.note-user {
	white-space: nowrap;
	text-overflow: ellipsis;
	overflow: hidden;
}
.notes td.note-user a:not([href]) {
	opacity: .7;
}
.notes td.note-user .uid {
	opacity: .7;
	font-size: .7em;
	font-family: sans-serif;
}
.notes table:not(.expanded-username) td.note-user {
	max-width: 10em;
}
.notes table:not(.expanded-username) td.note-user .uid {
	display: none;
}
.notes table.contracted-username td.note-user {
	max-width: 3em;
}

.notes td.note-action [class|=icon-status-open] > svg {
	--table-note-default-part-visibility: hidden;
	--table-note-open-part-visibility: visible;
}
.notes td.note-action [class|=icon-status-closed] > svg {
	--table-note-default-part-visibility: hidden;
	--table-note-closed-part-visibility: visible;
}
.notes td.note-action [class|=icon-status-commented] > svg {
	--table-note-default-part-visibility: hidden;
	--table-note-commented-part-visibility: visible;
}
.notes td.note-action [class|=icon-status-hidden] > svg {
	--table-note-default-part-visibility: hidden;
	--table-note-hidden-part-visibility: visible;
}

.notes td.note-comment {
	--comment-img-gap-size: 2px;
	--comment-link-outline: solid orange var(--comment-img-gap-size);
	white-space: pre-wrap;
	overflow-wrap: anywhere;
	width: 100%;
}
.notes td.note-comment:empty::before {
	content: "no comment";
	color: gray;
}
.notes td.note-comment a.image:is(:hover,.active) {
	outline: var(--comment-link-outline)
}
.notes td.note-comment a.image.float {
	display: none;
	float: right;
	max-width: 25%;
	margin-left: var(--comment-img-gap-size);
	margin-bottom: var(--comment-img-gap-size);
}
.notes td.note-comment a.image.float img {
	display: block;
	max-width: 100%;
	max-height: 25vh;
}
.notes table.with-images td.note-comment a.image.float {
	display: block;
}
.notes table:not(.expanded-comment-lines) td.note-comment {
	white-space: nowrap;
	overflow: hidden;
}

.notes th.note-map {
	text-align: center;
	right: 0;
}
.notes td.note-map {
	position: sticky;
	right: 0;
	padding: 0 1.25rem;
}
.notes td.note-map a {
	box-sizing: border-box;
	position: absolute;
	inset: 0;
	height: 100%;
	width: 100%;
	padding: 0;
	border: outset 1px #888;
	background: #888;
}
.notes td.note-map a:not(:hover) {
	filter: grayscale(50%);
}
.notes td.note-map a:focus-visible {
	outline-offset: calc(0px - var(--cell-pad));
}
.notes tbody.status-open td.note-map a {
	border-color: #F88;
	background: #F88;
}
.notes tbody.status-closed td.note-map a {
	border-color: #8F8;
	background: #8F8;
}
.notes td.note-map a > svg {
	position: absolute;
	inset: 0;
	margin: auto;
	width: 19px;
	height: 13px;
}
.notes table.contracted-map-link :is(td,th).note-map {
	padding-left: 0;
}
.notes table.contracted-map-link td.note-map a {
	border-left: none;
	border-right: none;
}
.notes table.contracted-map-link td.note-map a:focus-visible {
	outline: none;
	box-shadow: -3px 0px 0px 0px #08FF;
}
.notes table.contracted-map-link td.note-map a > svg {
	display: none;
}
.notes table.contracted-map-link td.note-map {
	padding: 0;
}
.notes table.contracted-map-link th.note-map button {
	margin-left: -19px;
}

/*** css/map.css ***/
.map {
	width: 100%;
	height: 100%;
	isolation: isolate;
}
.map .note-marker {
	opacity: 0.5;
}
.map .note-marker.active-click,
.map .note-marker.active-hover {
	opacity: 1;
}
.map .note-marker .aura {
	stroke: #0000;
	fill: #0000;
	transition: stroke,fill .5s;
}
.map .note-marker.active-hover .aura {
	stroke: #048;
	fill: #FFF;
}
.map .note-marker.active-click .aura {
	fill: #FC0;
}
.map .note-marker a {
	display: inline-block;
}
.map .note-track {
	vector-effect: non-scaling-stroke;
}
.map .crosshair-overlay {
	position: absolute;
	z-index: 500;
	width: 100%;
	height: 100%;
	display: flex;
	align-items: center;
	justify-content: center;
	pointer-events: none;
}
.map .crosshair-overlay .crosshair {
	height: 15px;
	width: 15px;
}
.map .osm-element-popup-contents {
	--block-gap: .5em;
}
.map .osm-element-popup-contents :is(p,figure) {
	margin: var(--block-gap) 0;
}
.map .osm-element-popup-contents figure figcaption {
	font-weight: bold;
}
.map .osm-element-popup-contents figure table {
	border: var(--frame-line);
	border-spacing: 0;
	border-radius: .25rem;
	width: 100%;
}
.map .osm-element-popup-contents figure tr:not(:first-child) :is(td,th) {
	border-top: var(--frame-line);
}
.map .osm-element-popup-contents figure tr :is(td,th):first-child {
	background: var(--tag-key-background-color);
}
.map .osm-element-popup-contents figure tr td:not(:first-child) {
	border-left: var(--frame-line);
}
.map .osm-element-popup-contents figure tr td:is(:not(:first-child),.long) { /* can't select all key cells because they will get wrapped at the expense of long value cells */
	word-wrap: anywhere;
}
.map .osm-element-popup-contents button {
	display: block;
	box-sizing: border-box;
	width: 100%;
	margin: var(--block-gap) 0;
}

@media (prefers-color-scheme: dark) {
	.leaflet-container {
		background: #888 !important;
	}
	.leaflet-container .leaflet-popup-content-wrapper a {
		color: revert;
	}
	.leaflet-popup-content-wrapper,
	.leaflet-control {
		background: #222 !important;
		color: revert !important;
	}
	.leaflet-bar a {
		background: #222 !important;
		color: #CCC !important;
	}
	/* dark mode filter:
		https://github.com/openstreetmap/openstreetmap-website/issues/2332
		https://github.com/pkrasicki/issviewer/blob/master/public/css/dark-theme.css
	*/
	.map img.leaflet-tile {
		filter: brightness(0.6) invert(1) contrast(3) hue-rotate(200deg) saturate(0.3) brightness(0.7);
	}
}
.leaflet-bar a:hover {
	background: var(--hover-color) !important;
}

/*** css/overlay.css ***/
.graphic-side button.menu {
	z-index: 1;
	/* copied from leaflet: */
	top: 10px;
	left: 10px;
	border: 2px solid rgba(0,0,0,0.2);
	border-radius: 5px;
}
.graphic-side button.menu:not(:hover) > svg {
	background: canvas;
}
.graphic-side button.menu[aria-expanded=true] {
	--menu-cross-part-visibility: visible;
}

.graphic-side button.resize {
	z-index: 1;
	border: 2px solid rgba(0,0,0,0.2);
	margin: auto;
	touch-action: none;
}
.ui .text-side[data-side='top'] + .graphic-side button.resize {
	left: 0;
	right: 0;
	top: 0;
	height: 1rem;
	border-top: none;
	border-bottom-left-radius: 5px;
	border-bottom-right-radius: 5px;
	cursor: row-resize;
}
.ui .text-side[data-side='bottom'] + .graphic-side button.resize {
	left: 0;
	right: 0;
	bottom: 0;
	height: 1rem;
	border-bottom: none;
	border-top-left-radius: 5px;
	border-top-right-radius: 5px;
	cursor: row-resize;
}
.ui .text-side[data-side='left'] + .graphic-side button.resize {
	left: 0;
	top: 0;
	bottom: 0;
	width: 1rem;
	border-left: none;
	border-top-right-radius: 5px;
	border-bottom-right-radius: 5px;
	cursor: col-resize;
}
.ui .text-side[data-side='right'] + .graphic-side button.resize {
	right: 0;
	top: 0;
	bottom: 0;
	width: 1rem;
	border-right: none;
	border-top-left-radius: 5px;
	border-bottom-left-radius: 5px;
	cursor: col-resize;
}
.graphic-side button.resize > svg {
	position: absolute;
	translate: -50% -50%;
}
.ui .text-side:is([data-side='top'],[data-side='bottom']) + .graphic-side button.resize > svg {
	height: auto;
}
.ui .text-side:is([data-side='left'],[data-side='right']) + .graphic-side button.resize > svg {
	width: auto;
}
.graphic-side button.resize:not(:hover) > svg {
	background: canvas;
}

.graphic-side div.menu:not([hidden]) {
	position: absolute;
	inset: 0;
	background: canvas;
	display: flex;
	flex-direction: column;
}
.graphic-side div.menu .lead {
	margin-left: calc(20px + 2rem);
	min-height: calc(20px + 2rem);
	display: grid;
	align-content: center;
}
.graphic-side div.menu .scrolling {
	flex-grow: 1;
	overflow-y: scroll;
}
.graphic-side div.menu .panel {
	--panel-padding: 1rem;
}

dialog.figure {
	position: absolute;
	z-index: 2;
	inset: 0;
	padding: 0;
	border: 0;
	width: 100%;
	height: 100%;
	--control-position-offset: .5rem;
}
dialog.figure figure {
	width: 100%;
	height: 100%;
	overflow: hidden;
	margin: 0;
	padding: 0;
	cursor: zoom-in;
	scrollbar-width: thin;
}
dialog.figure figure::-webkit-scrollbar {
	width: 8px;
	height: 8px;
}
dialog.figure figure::-webkit-scrollbar-track,
dialog.figure figure::-webkit-scrollbar-corner {
	background: var(--inset-background-color);
}
dialog.figure figure::-webkit-scrollbar-thumb {
	background: var(--frame-color);
}
dialog.figure figure:not(.zoomed) {
	display: flex;
	align-items: center;
	justify-content: center;
	touch-action: none;
}
dialog.figure figure.zoomed {
	overflow: scroll;
	cursor: zoom-out;
}
dialog.figure figure .backdrop {
	position: absolute;
	inset: 0;
	background-color: #888;
	background-size: cover;
	background-position: center;
	filter: saturate(.5) brightness(.8) blur(10px);
}
dialog.figure figure.zoomed .backdrop {
	display: none;
}
dialog.figure figure img {
	position: relative;
	display: block;
}
dialog.figure figure:not(.zoomed) img {
	max-width: 100%;
	max-height: 100%;
}
@keyframes figure-control-fade {
	from { opacity: 1; }
	to { opacity: 0; }
}
dialog.figure :is(button,figcaption) {
	background: #AAA8;
	color: #FFF;
	opacity: 0;
}
dialog.figure button {
	border-radius: 50%;
}
dialog.figure button.close {
	top: var(--control-position-offset);
	left: var(--control-position-offset);
}
dialog.figure button.close.right-position {
	left: unset;
	right: var(--control-position-offset);
}
dialog.figure button.close.bottom-position {
	top: unset;
	bottom: var(--control-position-offset);
}
dialog.figure button:is(.prev,.next) {
	top: 0;
	bottom: 0;
	margin: auto 0;
}
dialog.figure button.prev {
	left: var(--control-position-offset);
}
dialog.figure button.next {
	right: var(--control-position-offset);
}
dialog.figure button:not([disabled]):hover > svg {
	background: #246;
}
dialog.figure figcaption {
	position: absolute;
	top: calc(.25rem + var(--control-position-offset));
	left:  calc(2.5rem + var(--control-position-offset));
	right: calc(2.5rem + var(--control-position-offset));
	padding: .25rem .5rem;
}
dialog.figure button:is(:hover,:focus),
dialog.figure figcaption:hover {
	opacity: 1;
	animation: none !important;
}

dialog.help {
	padding: 1rem;
}
dialog.help button.close {
	float: right;
	width: 2rem;
	height: 2rem;
	box-sizing: border-box;
	border: none;
	padding: 0;
	margin: -2px;
	background: none;
	overflow: hidden;
	border-radius: 50%;
	cursor: pointer;
}
dialog.help button.close:hover {
	background: var(--hover-color);
}
dialog.help button.close > svg {
	width: 100%;
	height: 100%;
}
dialog.help > h2:first-child,
dialog.help > button.close:first-child + h2 {
	margin-top: 0;
}
dialog.help .regular-input-group {
	margin: .2rem 0;
}
dialog.help .major-input-group {
	margin: 1rem 0;
}
dialog.help .major-input-group.all-tools {
	padding-bottom: .5rem;
	border-bottom: var(--frame-line);
	margin-bottom: .5rem;
}
dialog.help .major-input-group:last-child {
	margin-bottom: 0;
}
dialog.help .major-input-group button {
	display: block;
	box-sizing: border-box;
	width: 100%;
	padding: var(--major-button-padding);
	margin: .2rem 0;
}
dialog.help .notice {
	margin-left: -1rem;
	margin-right: -1rem;
	padding: 1rem;
	background: var(--notice-background-color);
}
dialog.help > .notice:last-child {
	margin-bottom: -1rem;
}
dialog.help :is(p,ul) {
	line-height: 1.5;
}
dialog.help kbd {
	display: inline-block;
	background: var(--inset-background-color);
	border-radius: 3px;
	line-height: 1;
	padding: 2px 4px;
	white-space: nowrap;
	font-weight: bold;
	border: solid 1px var(--frame-color);
	box-shadow: 0 1px 1px var(--frame-color);
}

